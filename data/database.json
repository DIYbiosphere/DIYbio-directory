---
layout: 
---

{
  "database": [
    {% for initiative in site.projects %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      },
    {% endfor %}
    {% for initiative in site.groups %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      },
    {% endfor %}
    {% for initiative in site.labs %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      },
    {% endfor %}
    {% for initiative in site.networks %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      },
    {% endfor %}
    {% for initiative in site.startups %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      },
    {% endfor %}
    {% for initiative in site.incubators %}
      {
        "url": "{{ initiative.url }}",
        "title": "{{ initiative.title | xml_escape }}",
        "start-date": "{{ initiative.start-date | xml_escape }}",
        "type-org": "{{ initiative.type-org | xml_escape }}",
        "city": "{{ initiative.city | xml_escape }}",
        "state": "{{ initiative.state | xml_escape }}",
        "country": "{{ initiative.country | xml_escape }}",
        "host": {{ initiative.host | jsonify }},
        "region": "{{ initiative.region | xml_escape }}",
        "collection": "{{ initiative.collection | xml_escape }}",
        "tags": "{{ initiative.tags | array_to_sentence_string }}"
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
}
